{"version":3,"file":"index.esm.js","sources":["../node_modules/@rollup/pluginutils/node_modules/picomatch/lib/constants.js","../node_modules/@rollup/pluginutils/node_modules/picomatch/lib/utils.js","../node_modules/@rollup/pluginutils/node_modules/picomatch/lib/scan.js","../node_modules/@rollup/pluginutils/node_modules/picomatch/lib/parse.js","../node_modules/@rollup/pluginutils/node_modules/picomatch/lib/picomatch.js","../node_modules/@rollup/pluginutils/node_modules/picomatch/index.js","../node_modules/@rollup/pluginutils/dist/es/index.js","../src/options.ts","../src/constants.ts","../src/cssHandler.ts","../src/queries.ts","../src/script.ts","../src/jsHandler.ts","../src/index.ts"],"sourcesContent":["'use strict';\n\nconst path = require('path');\nconst WIN_SLASH = '\\\\\\\\/';\nconst WIN_NO_SLASH = `[^${WIN_SLASH}]`;\n\n/**\n * Posix glob regex\n */\n\nconst DOT_LITERAL = '\\\\.';\nconst PLUS_LITERAL = '\\\\+';\nconst QMARK_LITERAL = '\\\\?';\nconst SLASH_LITERAL = '\\\\/';\nconst ONE_CHAR = '(?=.)';\nconst QMARK = '[^/]';\nconst END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;\nconst START_ANCHOR = `(?:^|${SLASH_LITERAL})`;\nconst DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;\nconst NO_DOT = `(?!${DOT_LITERAL})`;\nconst NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;\nconst NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;\nconst NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;\nconst QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;\nconst STAR = `${QMARK}*?`;\n\nconst POSIX_CHARS = {\n  DOT_LITERAL,\n  PLUS_LITERAL,\n  QMARK_LITERAL,\n  SLASH_LITERAL,\n  ONE_CHAR,\n  QMARK,\n  END_ANCHOR,\n  DOTS_SLASH,\n  NO_DOT,\n  NO_DOTS,\n  NO_DOT_SLASH,\n  NO_DOTS_SLASH,\n  QMARK_NO_DOT,\n  STAR,\n  START_ANCHOR\n};\n\n/**\n * Windows glob regex\n */\n\nconst WINDOWS_CHARS = {\n  ...POSIX_CHARS,\n\n  SLASH_LITERAL: `[${WIN_SLASH}]`,\n  QMARK: WIN_NO_SLASH,\n  STAR: `${WIN_NO_SLASH}*?`,\n  DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,\n  NO_DOT: `(?!${DOT_LITERAL})`,\n  NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,\n  NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  QMARK_NO_DOT: `[^.${WIN_SLASH}]`,\n  START_ANCHOR: `(?:^|[${WIN_SLASH}])`,\n  END_ANCHOR: `(?:[${WIN_SLASH}]|$)`\n};\n\n/**\n * POSIX Bracket Regex\n */\n\nconst POSIX_REGEX_SOURCE = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  ascii: '\\\\x00-\\\\x7F',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E ',\n  punct: '\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word: 'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9'\n};\n\nmodule.exports = {\n  MAX_LENGTH: 1024 * 64,\n  POSIX_REGEX_SOURCE,\n\n  // regular expressions\n  REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\n  REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\n  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\n  REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\n  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\n  REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\n\n  // Replace globs with equivalent patterns to reduce parsing time.\n  REPLACEMENTS: {\n    '***': '*',\n    '**/**': '**',\n    '**/**/**': '**'\n  },\n\n  // Digits\n  CHAR_0: 48, /* 0 */\n  CHAR_9: 57, /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 65, /* A */\n  CHAR_LOWERCASE_A: 97, /* a */\n  CHAR_UPPERCASE_Z: 90, /* Z */\n  CHAR_LOWERCASE_Z: 122, /* z */\n\n  CHAR_LEFT_PARENTHESES: 40, /* ( */\n  CHAR_RIGHT_PARENTHESES: 41, /* ) */\n\n  CHAR_ASTERISK: 42, /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: 38, /* & */\n  CHAR_AT: 64, /* @ */\n  CHAR_BACKWARD_SLASH: 92, /* \\ */\n  CHAR_CARRIAGE_RETURN: 13, /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: 94, /* ^ */\n  CHAR_COLON: 58, /* : */\n  CHAR_COMMA: 44, /* , */\n  CHAR_DOT: 46, /* . */\n  CHAR_DOUBLE_QUOTE: 34, /* \" */\n  CHAR_EQUAL: 61, /* = */\n  CHAR_EXCLAMATION_MARK: 33, /* ! */\n  CHAR_FORM_FEED: 12, /* \\f */\n  CHAR_FORWARD_SLASH: 47, /* / */\n  CHAR_GRAVE_ACCENT: 96, /* ` */\n  CHAR_HASH: 35, /* # */\n  CHAR_HYPHEN_MINUS: 45, /* - */\n  CHAR_LEFT_ANGLE_BRACKET: 60, /* < */\n  CHAR_LEFT_CURLY_BRACE: 123, /* { */\n  CHAR_LEFT_SQUARE_BRACKET: 91, /* [ */\n  CHAR_LINE_FEED: 10, /* \\n */\n  CHAR_NO_BREAK_SPACE: 160, /* \\u00A0 */\n  CHAR_PERCENT: 37, /* % */\n  CHAR_PLUS: 43, /* + */\n  CHAR_QUESTION_MARK: 63, /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: 62, /* > */\n  CHAR_RIGHT_CURLY_BRACE: 125, /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: 93, /* ] */\n  CHAR_SEMICOLON: 59, /* ; */\n  CHAR_SINGLE_QUOTE: 39, /* ' */\n  CHAR_SPACE: 32, /*   */\n  CHAR_TAB: 9, /* \\t */\n  CHAR_UNDERSCORE: 95, /* _ */\n  CHAR_VERTICAL_LINE: 124, /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, /* \\uFEFF */\n\n  SEP: path.sep,\n\n  /**\n   * Create EXTGLOB_CHARS\n   */\n\n  extglobChars(chars) {\n    return {\n      '!': { type: 'negate', open: '(?:(?!(?:', close: `))${chars.STAR})` },\n      '?': { type: 'qmark', open: '(?:', close: ')?' },\n      '+': { type: 'plus', open: '(?:', close: ')+' },\n      '*': { type: 'star', open: '(?:', close: ')*' },\n      '@': { type: 'at', open: '(?:', close: ')' }\n    };\n  },\n\n  /**\n   * Create GLOB_CHARS\n   */\n\n  globChars(win32) {\n    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;\n  }\n};\n","'use strict';\n\nconst path = require('path');\nconst win32 = process.platform === 'win32';\nconst {\n  REGEX_BACKSLASH,\n  REGEX_REMOVE_BACKSLASH,\n  REGEX_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_GLOBAL\n} = require('./constants');\n\nexports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\nexports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\nexports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\nexports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\nexports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');\n\nexports.removeBackslashes = str => {\n  return str.replace(REGEX_REMOVE_BACKSLASH, match => {\n    return match === '\\\\' ? '' : match;\n  });\n};\n\nexports.supportsLookbehinds = () => {\n  const segs = process.version.slice(1).split('.').map(Number);\n  if (segs.length === 3 && segs[0] >= 9 || (segs[0] === 8 && segs[1] >= 10)) {\n    return true;\n  }\n  return false;\n};\n\nexports.isWindows = options => {\n  if (options && typeof options.windows === 'boolean') {\n    return options.windows;\n  }\n  return win32 === true || path.sep === '\\\\';\n};\n\nexports.escapeLast = (input, char, lastIdx) => {\n  const idx = input.lastIndexOf(char, lastIdx);\n  if (idx === -1) return input;\n  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\n  return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\n};\n\nexports.removePrefix = (input, state = {}) => {\n  let output = input;\n  if (output.startsWith('./')) {\n    output = output.slice(2);\n    state.prefix = './';\n  }\n  return output;\n};\n\nexports.wrapOutput = (input, state = {}, options = {}) => {\n  const prepend = options.contains ? '' : '^';\n  const append = options.contains ? '' : '$';\n\n  let output = `${prepend}(?:${input})${append}`;\n  if (state.negated === true) {\n    output = `(?:^(?!${output}).*$)`;\n  }\n  return output;\n};\n","'use strict';\n\nconst utils = require('./utils');\nconst {\n  CHAR_ASTERISK,             /* * */\n  CHAR_AT,                   /* @ */\n  CHAR_BACKWARD_SLASH,       /* \\ */\n  CHAR_COMMA,                /* , */\n  CHAR_DOT,                  /* . */\n  CHAR_EXCLAMATION_MARK,     /* ! */\n  CHAR_FORWARD_SLASH,        /* / */\n  CHAR_LEFT_CURLY_BRACE,     /* { */\n  CHAR_LEFT_PARENTHESES,     /* ( */\n  CHAR_LEFT_SQUARE_BRACKET,  /* [ */\n  CHAR_PLUS,                 /* + */\n  CHAR_QUESTION_MARK,        /* ? */\n  CHAR_RIGHT_CURLY_BRACE,    /* } */\n  CHAR_RIGHT_PARENTHESES,    /* ) */\n  CHAR_RIGHT_SQUARE_BRACKET  /* ] */\n} = require('./constants');\n\nconst isPathSeparator = code => {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n};\n\nconst depth = token => {\n  if (token.isPrefix !== true) {\n    token.depth = token.isGlobstar ? Infinity : 1;\n  }\n};\n\n/**\n * Quickly scans a glob pattern and returns an object with a handful of\n * useful properties, like `isGlob`, `path` (the leading non-glob, if it exists),\n * `glob` (the actual pattern), `negated` (true if the path starts with `!` but not\n * with `!(`) and `negatedExtglob` (true if the path starts with `!(`).\n *\n * ```js\n * const pm = require('picomatch');\n * console.log(pm.scan('foo/bar/*.js'));\n * { isGlob: true, input: 'foo/bar/*.js', base: 'foo/bar', glob: '*.js' }\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {Object} Returns an object with tokens and regex source string.\n * @api public\n */\n\nconst scan = (input, options) => {\n  const opts = options || {};\n\n  const length = input.length - 1;\n  const scanToEnd = opts.parts === true || opts.scanToEnd === true;\n  const slashes = [];\n  const tokens = [];\n  const parts = [];\n\n  let str = input;\n  let index = -1;\n  let start = 0;\n  let lastIndex = 0;\n  let isBrace = false;\n  let isBracket = false;\n  let isGlob = false;\n  let isExtglob = false;\n  let isGlobstar = false;\n  let braceEscaped = false;\n  let backslashes = false;\n  let negated = false;\n  let negatedExtglob = false;\n  let finished = false;\n  let braces = 0;\n  let prev;\n  let code;\n  let token = { value: '', depth: 0, isGlob: false };\n\n  const eos = () => index >= length;\n  const peek = () => str.charCodeAt(index + 1);\n  const advance = () => {\n    prev = code;\n    return str.charCodeAt(++index);\n  };\n\n  while (index < length) {\n    code = advance();\n    let next;\n\n    if (code === CHAR_BACKWARD_SLASH) {\n      backslashes = token.backslashes = true;\n      code = advance();\n\n      if (code === CHAR_LEFT_CURLY_BRACE) {\n        braceEscaped = true;\n      }\n      continue;\n    }\n\n    if (braceEscaped === true || code === CHAR_LEFT_CURLY_BRACE) {\n      braces++;\n\n      while (eos() !== true && (code = advance())) {\n        if (code === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (code === CHAR_LEFT_CURLY_BRACE) {\n          braces++;\n          continue;\n        }\n\n        if (braceEscaped !== true && code === CHAR_DOT && (code = advance()) === CHAR_DOT) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (braceEscaped !== true && code === CHAR_COMMA) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (code === CHAR_RIGHT_CURLY_BRACE) {\n          braces--;\n\n          if (braces === 0) {\n            braceEscaped = false;\n            isBrace = token.isBrace = true;\n            finished = true;\n            break;\n          }\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (code === CHAR_FORWARD_SLASH) {\n      slashes.push(index);\n      tokens.push(token);\n      token = { value: '', depth: 0, isGlob: false };\n\n      if (finished === true) continue;\n      if (prev === CHAR_DOT && index === (start + 1)) {\n        start += 2;\n        continue;\n      }\n\n      lastIndex = index + 1;\n      continue;\n    }\n\n    if (opts.noext !== true) {\n      const isExtglobChar = code === CHAR_PLUS\n        || code === CHAR_AT\n        || code === CHAR_ASTERISK\n        || code === CHAR_QUESTION_MARK\n        || code === CHAR_EXCLAMATION_MARK;\n\n      if (isExtglobChar === true && peek() === CHAR_LEFT_PARENTHESES) {\n        isGlob = token.isGlob = true;\n        isExtglob = token.isExtglob = true;\n        finished = true;\n        if (code === CHAR_EXCLAMATION_MARK && index === start) {\n          negatedExtglob = true;\n        }\n\n        if (scanToEnd === true) {\n          while (eos() !== true && (code = advance())) {\n            if (code === CHAR_BACKWARD_SLASH) {\n              backslashes = token.backslashes = true;\n              code = advance();\n              continue;\n            }\n\n            if (code === CHAR_RIGHT_PARENTHESES) {\n              isGlob = token.isGlob = true;\n              finished = true;\n              break;\n            }\n          }\n          continue;\n        }\n        break;\n      }\n    }\n\n    if (code === CHAR_ASTERISK) {\n      if (prev === CHAR_ASTERISK) isGlobstar = token.isGlobstar = true;\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_QUESTION_MARK) {\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_LEFT_SQUARE_BRACKET) {\n      while (eos() !== true && (next = advance())) {\n        if (next === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          isBracket = token.isBracket = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n          break;\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (opts.nonegate !== true && code === CHAR_EXCLAMATION_MARK && index === start) {\n      negated = token.negated = true;\n      start++;\n      continue;\n    }\n\n    if (opts.noparen !== true && code === CHAR_LEFT_PARENTHESES) {\n      isGlob = token.isGlob = true;\n\n      if (scanToEnd === true) {\n        while (eos() !== true && (code = advance())) {\n          if (code === CHAR_LEFT_PARENTHESES) {\n            backslashes = token.backslashes = true;\n            code = advance();\n            continue;\n          }\n\n          if (code === CHAR_RIGHT_PARENTHESES) {\n            finished = true;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    if (isGlob === true) {\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n  }\n\n  if (opts.noext === true) {\n    isExtglob = false;\n    isGlob = false;\n  }\n\n  let base = str;\n  let prefix = '';\n  let glob = '';\n\n  if (start > 0) {\n    prefix = str.slice(0, start);\n    str = str.slice(start);\n    lastIndex -= start;\n  }\n\n  if (base && isGlob === true && lastIndex > 0) {\n    base = str.slice(0, lastIndex);\n    glob = str.slice(lastIndex);\n  } else if (isGlob === true) {\n    base = '';\n    glob = str;\n  } else {\n    base = str;\n  }\n\n  if (base && base !== '' && base !== '/' && base !== str) {\n    if (isPathSeparator(base.charCodeAt(base.length - 1))) {\n      base = base.slice(0, -1);\n    }\n  }\n\n  if (opts.unescape === true) {\n    if (glob) glob = utils.removeBackslashes(glob);\n\n    if (base && backslashes === true) {\n      base = utils.removeBackslashes(base);\n    }\n  }\n\n  const state = {\n    prefix,\n    input,\n    start,\n    base,\n    glob,\n    isBrace,\n    isBracket,\n    isGlob,\n    isExtglob,\n    isGlobstar,\n    negated,\n    negatedExtglob\n  };\n\n  if (opts.tokens === true) {\n    state.maxDepth = 0;\n    if (!isPathSeparator(code)) {\n      tokens.push(token);\n    }\n    state.tokens = tokens;\n  }\n\n  if (opts.parts === true || opts.tokens === true) {\n    let prevIndex;\n\n    for (let idx = 0; idx < slashes.length; idx++) {\n      const n = prevIndex ? prevIndex + 1 : start;\n      const i = slashes[idx];\n      const value = input.slice(n, i);\n      if (opts.tokens) {\n        if (idx === 0 && start !== 0) {\n          tokens[idx].isPrefix = true;\n          tokens[idx].value = prefix;\n        } else {\n          tokens[idx].value = value;\n        }\n        depth(tokens[idx]);\n        state.maxDepth += tokens[idx].depth;\n      }\n      if (idx !== 0 || value !== '') {\n        parts.push(value);\n      }\n      prevIndex = i;\n    }\n\n    if (prevIndex && prevIndex + 1 < input.length) {\n      const value = input.slice(prevIndex + 1);\n      parts.push(value);\n\n      if (opts.tokens) {\n        tokens[tokens.length - 1].value = value;\n        depth(tokens[tokens.length - 1]);\n        state.maxDepth += tokens[tokens.length - 1].depth;\n      }\n    }\n\n    state.slashes = slashes;\n    state.parts = parts;\n  }\n\n  return state;\n};\n\nmodule.exports = scan;\n","'use strict';\n\nconst constants = require('./constants');\nconst utils = require('./utils');\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  POSIX_REGEX_SOURCE,\n  REGEX_NON_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_BACKREF,\n  REPLACEMENTS\n} = constants;\n\n/**\n * Helpers\n */\n\nconst expandRange = (args, options) => {\n  if (typeof options.expandRange === 'function') {\n    return options.expandRange(...args, options);\n  }\n\n  args.sort();\n  const value = `[${args.join('-')}]`;\n\n  try {\n    /* eslint-disable-next-line no-new */\n    new RegExp(value);\n  } catch (ex) {\n    return args.map(v => utils.escapeRegex(v)).join('..');\n  }\n\n  return value;\n};\n\n/**\n * Create the message for a syntax error\n */\n\nconst syntaxError = (type, char) => {\n  return `Missing ${type}: \"${char}\" - use \"\\\\\\\\${char}\" to match literal characters`;\n};\n\n/**\n * Parse the given input string.\n * @param {String} input\n * @param {Object} options\n * @return {Object}\n */\n\nconst parse = (input, options) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  input = REPLACEMENTS[input] || input;\n\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n\n  let len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  const bos = { type: 'bos', value: '', output: opts.prepend || '' };\n  const tokens = [bos];\n\n  const capture = opts.capture ? '' : '?:';\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const PLATFORM_CHARS = constants.globChars(win32);\n  const EXTGLOB_CHARS = constants.extglobChars(PLATFORM_CHARS);\n\n  const {\n    DOT_LITERAL,\n    PLUS_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOT_SLASH,\n    NO_DOTS_SLASH,\n    QMARK,\n    QMARK_NO_DOT,\n    STAR,\n    START_ANCHOR\n  } = PLATFORM_CHARS;\n\n  const globstar = opts => {\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const nodot = opts.dot ? '' : NO_DOT;\n  const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;\n  let star = opts.bash === true ? globstar(opts) : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  // minimatch options support\n  if (typeof opts.noext === 'boolean') {\n    opts.noextglob = opts.noext;\n  }\n\n  const state = {\n    input,\n    index: -1,\n    start: 0,\n    dot: opts.dot === true,\n    consumed: '',\n    output: '',\n    prefix: '',\n    backtrack: false,\n    negated: false,\n    brackets: 0,\n    braces: 0,\n    parens: 0,\n    quotes: 0,\n    globstar: false,\n    tokens\n  };\n\n  input = utils.removePrefix(input, state);\n  len = input.length;\n\n  const extglobs = [];\n  const braces = [];\n  const stack = [];\n  let prev = bos;\n  let value;\n\n  /**\n   * Tokenizing helpers\n   */\n\n  const eos = () => state.index === len - 1;\n  const peek = state.peek = (n = 1) => input[state.index + n];\n  const advance = state.advance = () => input[++state.index] || '';\n  const remaining = () => input.slice(state.index + 1);\n  const consume = (value = '', num = 0) => {\n    state.consumed += value;\n    state.index += num;\n  };\n\n  const append = token => {\n    state.output += token.output != null ? token.output : token.value;\n    consume(token.value);\n  };\n\n  const negate = () => {\n    let count = 1;\n\n    while (peek() === '!' && (peek(2) !== '(' || peek(3) === '?')) {\n      advance();\n      state.start++;\n      count++;\n    }\n\n    if (count % 2 === 0) {\n      return false;\n    }\n\n    state.negated = true;\n    state.start++;\n    return true;\n  };\n\n  const increment = type => {\n    state[type]++;\n    stack.push(type);\n  };\n\n  const decrement = type => {\n    state[type]--;\n    stack.pop();\n  };\n\n  /**\n   * Push tokens onto the tokens array. This helper speeds up\n   * tokenizing by 1) helping us avoid backtracking as much as possible,\n   * and 2) helping us avoid creating extra tokens when consecutive\n   * characters are plain text. This improves performance and simplifies\n   * lookbehinds.\n   */\n\n  const push = tok => {\n    if (prev.type === 'globstar') {\n      const isBrace = state.braces > 0 && (tok.type === 'comma' || tok.type === 'brace');\n      const isExtglob = tok.extglob === true || (extglobs.length && (tok.type === 'pipe' || tok.type === 'paren'));\n\n      if (tok.type !== 'slash' && tok.type !== 'paren' && !isBrace && !isExtglob) {\n        state.output = state.output.slice(0, -prev.output.length);\n        prev.type = 'star';\n        prev.value = '*';\n        prev.output = star;\n        state.output += prev.output;\n      }\n    }\n\n    if (extglobs.length && tok.type !== 'paren') {\n      extglobs[extglobs.length - 1].inner += tok.value;\n    }\n\n    if (tok.value || tok.output) append(tok);\n    if (prev && prev.type === 'text' && tok.type === 'text') {\n      prev.value += tok.value;\n      prev.output = (prev.output || '') + tok.value;\n      return;\n    }\n\n    tok.prev = prev;\n    tokens.push(tok);\n    prev = tok;\n  };\n\n  const extglobOpen = (type, value) => {\n    const token = { ...EXTGLOB_CHARS[value], conditions: 1, inner: '' };\n\n    token.prev = prev;\n    token.parens = state.parens;\n    token.output = state.output;\n    const output = (opts.capture ? '(' : '') + token.open;\n\n    increment('parens');\n    push({ type, value, output: state.output ? '' : ONE_CHAR });\n    push({ type: 'paren', extglob: true, value: advance(), output });\n    extglobs.push(token);\n  };\n\n  const extglobClose = token => {\n    let output = token.close + (opts.capture ? ')' : '');\n    let rest;\n\n    if (token.type === 'negate') {\n      let extglobStar = star;\n\n      if (token.inner && token.inner.length > 1 && token.inner.includes('/')) {\n        extglobStar = globstar(opts);\n      }\n\n      if (extglobStar !== star || eos() || /^\\)+$/.test(remaining())) {\n        output = token.close = `)$))${extglobStar}`;\n      }\n\n      if (token.inner.includes('*') && (rest = remaining()) && /^\\.[^\\\\/.]+$/.test(rest)) {\n        // Any non-magical string (`.ts`) or even nested expression (`.{ts,tsx}`) can follow after the closing parenthesis.\n        // In this case, we need to parse the string and use it in the output of the original pattern.\n        // Suitable patterns: `/!(*.d).ts`, `/!(*.d).{ts,tsx}`, `**/!(*-dbg).@(js)`.\n        //\n        // Disabling the `fastpaths` option due to a problem with parsing strings as `.ts` in the pattern like `**/!(*.d).ts`.\n        const expression = parse(rest, { ...options, fastpaths: false }).output;\n\n        output = token.close = `)${expression})${extglobStar})`;\n      }\n\n      if (token.prev.type === 'bos') {\n        state.negatedExtglob = true;\n      }\n    }\n\n    push({ type: 'paren', extglob: true, value, output });\n    decrement('parens');\n  };\n\n  /**\n   * Fast paths\n   */\n\n  if (opts.fastpaths !== false && !/(^[*!]|[/()[\\]{}\"])/.test(input)) {\n    let backslashes = false;\n\n    let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {\n      if (first === '\\\\') {\n        backslashes = true;\n        return m;\n      }\n\n      if (first === '?') {\n        if (esc) {\n          return esc + first + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        if (index === 0) {\n          return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        return QMARK.repeat(chars.length);\n      }\n\n      if (first === '.') {\n        return DOT_LITERAL.repeat(chars.length);\n      }\n\n      if (first === '*') {\n        if (esc) {\n          return esc + first + (rest ? star : '');\n        }\n        return star;\n      }\n      return esc ? m : `\\\\${m}`;\n    });\n\n    if (backslashes === true) {\n      if (opts.unescape === true) {\n        output = output.replace(/\\\\/g, '');\n      } else {\n        output = output.replace(/\\\\+/g, m => {\n          return m.length % 2 === 0 ? '\\\\\\\\' : (m ? '\\\\' : '');\n        });\n      }\n    }\n\n    if (output === input && opts.contains === true) {\n      state.output = input;\n      return state;\n    }\n\n    state.output = utils.wrapOutput(output, state, options);\n    return state;\n  }\n\n  /**\n   * Tokenize input until we reach end-of-string\n   */\n\n  while (!eos()) {\n    value = advance();\n\n    if (value === '\\u0000') {\n      continue;\n    }\n\n    /**\n     * Escaped characters\n     */\n\n    if (value === '\\\\') {\n      const next = peek();\n\n      if (next === '/' && opts.bash !== true) {\n        continue;\n      }\n\n      if (next === '.' || next === ';') {\n        continue;\n      }\n\n      if (!next) {\n        value += '\\\\';\n        push({ type: 'text', value });\n        continue;\n      }\n\n      // collapse slashes to reduce potential for exploits\n      const match = /^\\\\+/.exec(remaining());\n      let slashes = 0;\n\n      if (match && match[0].length > 2) {\n        slashes = match[0].length;\n        state.index += slashes;\n        if (slashes % 2 !== 0) {\n          value += '\\\\';\n        }\n      }\n\n      if (opts.unescape === true) {\n        value = advance();\n      } else {\n        value += advance();\n      }\n\n      if (state.brackets === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n    }\n\n    /**\n     * If we're inside a regex character class, continue\n     * until we reach the closing bracket.\n     */\n\n    if (state.brackets > 0 && (value !== ']' || prev.value === '[' || prev.value === '[^')) {\n      if (opts.posix !== false && value === ':') {\n        const inner = prev.value.slice(1);\n        if (inner.includes('[')) {\n          prev.posix = true;\n\n          if (inner.includes(':')) {\n            const idx = prev.value.lastIndexOf('[');\n            const pre = prev.value.slice(0, idx);\n            const rest = prev.value.slice(idx + 2);\n            const posix = POSIX_REGEX_SOURCE[rest];\n            if (posix) {\n              prev.value = pre + posix;\n              state.backtrack = true;\n              advance();\n\n              if (!bos.output && tokens.indexOf(prev) === 1) {\n                bos.output = ONE_CHAR;\n              }\n              continue;\n            }\n          }\n        }\n      }\n\n      if ((value === '[' && peek() !== ':') || (value === '-' && peek() === ']')) {\n        value = `\\\\${value}`;\n      }\n\n      if (value === ']' && (prev.value === '[' || prev.value === '[^')) {\n        value = `\\\\${value}`;\n      }\n\n      if (opts.posix === true && value === '!' && prev.value === '[') {\n        value = '^';\n      }\n\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * If we're inside a quoted string, continue\n     * until we reach the closing double quote.\n     */\n\n    if (state.quotes === 1 && value !== '\"') {\n      value = utils.escapeRegex(value);\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * Double quotes\n     */\n\n    if (value === '\"') {\n      state.quotes = state.quotes === 1 ? 0 : 1;\n      if (opts.keepQuotes === true) {\n        push({ type: 'text', value });\n      }\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === '(') {\n      increment('parens');\n      push({ type: 'paren', value });\n      continue;\n    }\n\n    if (value === ')') {\n      if (state.parens === 0 && opts.strictBrackets === true) {\n        throw new SyntaxError(syntaxError('opening', '('));\n      }\n\n      const extglob = extglobs[extglobs.length - 1];\n      if (extglob && state.parens === extglob.parens + 1) {\n        extglobClose(extglobs.pop());\n        continue;\n      }\n\n      push({ type: 'paren', value, output: state.parens ? ')' : '\\\\)' });\n      decrement('parens');\n      continue;\n    }\n\n    /**\n     * Square brackets\n     */\n\n    if (value === '[') {\n      if (opts.nobracket === true || !remaining().includes(']')) {\n        if (opts.nobracket !== true && opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('closing', ']'));\n        }\n\n        value = `\\\\${value}`;\n      } else {\n        increment('brackets');\n      }\n\n      push({ type: 'bracket', value });\n      continue;\n    }\n\n    if (value === ']') {\n      if (opts.nobracket === true || (prev && prev.type === 'bracket' && prev.value.length === 1)) {\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      if (state.brackets === 0) {\n        if (opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError('opening', '['));\n        }\n\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      decrement('brackets');\n\n      const prevValue = prev.value.slice(1);\n      if (prev.posix !== true && prevValue[0] === '^' && !prevValue.includes('/')) {\n        value = `/${value}`;\n      }\n\n      prev.value += value;\n      append({ value });\n\n      // when literal brackets are explicitly disabled\n      // assume we should match with a regex character class\n      if (opts.literalBrackets === false || utils.hasRegexChars(prevValue)) {\n        continue;\n      }\n\n      const escaped = utils.escapeRegex(prev.value);\n      state.output = state.output.slice(0, -prev.value.length);\n\n      // when literal brackets are explicitly enabled\n      // assume we should escape the brackets to match literal characters\n      if (opts.literalBrackets === true) {\n        state.output += escaped;\n        prev.value = escaped;\n        continue;\n      }\n\n      // when the user specifies nothing, try to match both\n      prev.value = `(${capture}${escaped}|${prev.value})`;\n      state.output += prev.value;\n      continue;\n    }\n\n    /**\n     * Braces\n     */\n\n    if (value === '{' && opts.nobrace !== true) {\n      increment('braces');\n\n      const open = {\n        type: 'brace',\n        value,\n        output: '(',\n        outputIndex: state.output.length,\n        tokensIndex: state.tokens.length\n      };\n\n      braces.push(open);\n      push(open);\n      continue;\n    }\n\n    if (value === '}') {\n      const brace = braces[braces.length - 1];\n\n      if (opts.nobrace === true || !brace) {\n        push({ type: 'text', value, output: value });\n        continue;\n      }\n\n      let output = ')';\n\n      if (brace.dots === true) {\n        const arr = tokens.slice();\n        const range = [];\n\n        for (let i = arr.length - 1; i >= 0; i--) {\n          tokens.pop();\n          if (arr[i].type === 'brace') {\n            break;\n          }\n          if (arr[i].type !== 'dots') {\n            range.unshift(arr[i].value);\n          }\n        }\n\n        output = expandRange(range, opts);\n        state.backtrack = true;\n      }\n\n      if (brace.comma !== true && brace.dots !== true) {\n        const out = state.output.slice(0, brace.outputIndex);\n        const toks = state.tokens.slice(brace.tokensIndex);\n        brace.value = brace.output = '\\\\{';\n        value = output = '\\\\}';\n        state.output = out;\n        for (const t of toks) {\n          state.output += (t.output || t.value);\n        }\n      }\n\n      push({ type: 'brace', value, output });\n      decrement('braces');\n      braces.pop();\n      continue;\n    }\n\n    /**\n     * Pipes\n     */\n\n    if (value === '|') {\n      if (extglobs.length > 0) {\n        extglobs[extglobs.length - 1].conditions++;\n      }\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Commas\n     */\n\n    if (value === ',') {\n      let output = value;\n\n      const brace = braces[braces.length - 1];\n      if (brace && stack[stack.length - 1] === 'braces') {\n        brace.comma = true;\n        output = '|';\n      }\n\n      push({ type: 'comma', value, output });\n      continue;\n    }\n\n    /**\n     * Slashes\n     */\n\n    if (value === '/') {\n      // if the beginning of the glob is \"./\", advance the start\n      // to the current index, and don't add the \"./\" characters\n      // to the state. This greatly simplifies lookbehinds when\n      // checking for BOS characters like \"!\" and \".\" (not \"./\")\n      if (prev.type === 'dot' && state.index === state.start + 1) {\n        state.start = state.index + 1;\n        state.consumed = '';\n        state.output = '';\n        tokens.pop();\n        prev = bos; // reset \"prev\" to the first token\n        continue;\n      }\n\n      push({ type: 'slash', value, output: SLASH_LITERAL });\n      continue;\n    }\n\n    /**\n     * Dots\n     */\n\n    if (value === '.') {\n      if (state.braces > 0 && prev.type === 'dot') {\n        if (prev.value === '.') prev.output = DOT_LITERAL;\n        const brace = braces[braces.length - 1];\n        prev.type = 'dots';\n        prev.output += value;\n        prev.value += value;\n        brace.dots = true;\n        continue;\n      }\n\n      if ((state.braces + state.parens) === 0 && prev.type !== 'bos' && prev.type !== 'slash') {\n        push({ type: 'text', value, output: DOT_LITERAL });\n        continue;\n      }\n\n      push({ type: 'dot', value, output: DOT_LITERAL });\n      continue;\n    }\n\n    /**\n     * Question marks\n     */\n\n    if (value === '?') {\n      const isGroup = prev && prev.value === '(';\n      if (!isGroup && opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('qmark', value);\n        continue;\n      }\n\n      if (prev && prev.type === 'paren') {\n        const next = peek();\n        let output = value;\n\n        if (next === '<' && !utils.supportsLookbehinds()) {\n          throw new Error('Node.js v10 or higher is required for regex lookbehinds');\n        }\n\n        if ((prev.value === '(' && !/[!=<:]/.test(next)) || (next === '<' && !/<([!=]|\\w+>)/.test(remaining()))) {\n          output = `\\\\${value}`;\n        }\n\n        push({ type: 'text', value, output });\n        continue;\n      }\n\n      if (opts.dot !== true && (prev.type === 'slash' || prev.type === 'bos')) {\n        push({ type: 'qmark', value, output: QMARK_NO_DOT });\n        continue;\n      }\n\n      push({ type: 'qmark', value, output: QMARK });\n      continue;\n    }\n\n    /**\n     * Exclamation\n     */\n\n    if (value === '!') {\n      if (opts.noextglob !== true && peek() === '(') {\n        if (peek(2) !== '?' || !/[!=<:]/.test(peek(3))) {\n          extglobOpen('negate', value);\n          continue;\n        }\n      }\n\n      if (opts.nonegate !== true && state.index === 0) {\n        negate();\n        continue;\n      }\n    }\n\n    /**\n     * Plus\n     */\n\n    if (value === '+') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('plus', value);\n        continue;\n      }\n\n      if ((prev && prev.value === '(') || opts.regex === false) {\n        push({ type: 'plus', value, output: PLUS_LITERAL });\n        continue;\n      }\n\n      if ((prev && (prev.type === 'bracket' || prev.type === 'paren' || prev.type === 'brace')) || state.parens > 0) {\n        push({ type: 'plus', value });\n        continue;\n      }\n\n      push({ type: 'plus', value: PLUS_LITERAL });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value === '@') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        push({ type: 'at', extglob: true, value, output: '' });\n        continue;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value !== '*') {\n      if (value === '$' || value === '^') {\n        value = `\\\\${value}`;\n      }\n\n      const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());\n      if (match) {\n        value += match[0];\n        state.index += match[0].length;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Stars\n     */\n\n    if (prev && (prev.type === 'globstar' || prev.star === true)) {\n      prev.type = 'star';\n      prev.star = true;\n      prev.value += value;\n      prev.output = star;\n      state.backtrack = true;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    let rest = remaining();\n    if (opts.noextglob !== true && /^\\([^?]/.test(rest)) {\n      extglobOpen('star', value);\n      continue;\n    }\n\n    if (prev.type === 'star') {\n      if (opts.noglobstar === true) {\n        consume(value);\n        continue;\n      }\n\n      const prior = prev.prev;\n      const before = prior.prev;\n      const isStart = prior.type === 'slash' || prior.type === 'bos';\n      const afterStar = before && (before.type === 'star' || before.type === 'globstar');\n\n      if (opts.bash === true && (!isStart || (rest[0] && rest[0] !== '/'))) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      const isBrace = state.braces > 0 && (prior.type === 'comma' || prior.type === 'brace');\n      const isExtglob = extglobs.length && (prior.type === 'pipe' || prior.type === 'paren');\n      if (!isStart && prior.type !== 'paren' && !isBrace && !isExtglob) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      // strip consecutive `/**/`\n      while (rest.slice(0, 3) === '/**') {\n        const after = input[state.index + 4];\n        if (after && after !== '/') {\n          break;\n        }\n        rest = rest.slice(3);\n        consume('/**', 3);\n      }\n\n      if (prior.type === 'bos' && eos()) {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = globstar(opts);\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && !afterStar && eos()) {\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = globstar(opts) + (opts.strictSlashes ? ')' : '|$)');\n        prev.value += value;\n        state.globstar = true;\n        state.output += prior.output + prev.output;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && rest[0] === '/') {\n        const end = rest[1] !== void 0 ? '|$' : '';\n\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;\n        prev.value += value;\n\n        state.output += prior.output + prev.output;\n        state.globstar = true;\n\n        consume(value + advance());\n\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      if (prior.type === 'bos' && rest[0] === '/') {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value + advance());\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      // remove single star from output\n      state.output = state.output.slice(0, -prev.output.length);\n\n      // reset previous token to globstar\n      prev.type = 'globstar';\n      prev.output = globstar(opts);\n      prev.value += value;\n\n      // reset output with globstar\n      state.output += prev.output;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    const token = { type: 'star', value, output: star };\n\n    if (opts.bash === true) {\n      token.output = '.*?';\n      if (prev.type === 'bos' || prev.type === 'slash') {\n        token.output = nodot + token.output;\n      }\n      push(token);\n      continue;\n    }\n\n    if (prev && (prev.type === 'bracket' || prev.type === 'paren') && opts.regex === true) {\n      token.output = value;\n      push(token);\n      continue;\n    }\n\n    if (state.index === state.start || prev.type === 'slash' || prev.type === 'dot') {\n      if (prev.type === 'dot') {\n        state.output += NO_DOT_SLASH;\n        prev.output += NO_DOT_SLASH;\n\n      } else if (opts.dot === true) {\n        state.output += NO_DOTS_SLASH;\n        prev.output += NO_DOTS_SLASH;\n\n      } else {\n        state.output += nodot;\n        prev.output += nodot;\n      }\n\n      if (peek() !== '*') {\n        state.output += ONE_CHAR;\n        prev.output += ONE_CHAR;\n      }\n    }\n\n    push(token);\n  }\n\n  while (state.brackets > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ']'));\n    state.output = utils.escapeLast(state.output, '[');\n    decrement('brackets');\n  }\n\n  while (state.parens > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ')'));\n    state.output = utils.escapeLast(state.output, '(');\n    decrement('parens');\n  }\n\n  while (state.braces > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', '}'));\n    state.output = utils.escapeLast(state.output, '{');\n    decrement('braces');\n  }\n\n  if (opts.strictSlashes !== true && (prev.type === 'star' || prev.type === 'bracket')) {\n    push({ type: 'maybe_slash', value: '', output: `${SLASH_LITERAL}?` });\n  }\n\n  // rebuild the output if we had to backtrack at any point\n  if (state.backtrack === true) {\n    state.output = '';\n\n    for (const token of state.tokens) {\n      state.output += token.output != null ? token.output : token.value;\n\n      if (token.suffix) {\n        state.output += token.suffix;\n      }\n    }\n  }\n\n  return state;\n};\n\n/**\n * Fast paths for creating regular expressions for common glob patterns.\n * This can significantly speed up processing and has very little downside\n * impact when none of the fast paths match.\n */\n\nparse.fastpaths = (input, options) => {\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  const len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  input = REPLACEMENTS[input] || input;\n  const win32 = utils.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const {\n    DOT_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOTS,\n    NO_DOTS_SLASH,\n    STAR,\n    START_ANCHOR\n  } = constants.globChars(win32);\n\n  const nodot = opts.dot ? NO_DOTS : NO_DOT;\n  const slashDot = opts.dot ? NO_DOTS_SLASH : NO_DOT;\n  const capture = opts.capture ? '' : '?:';\n  const state = { negated: false, prefix: '' };\n  let star = opts.bash === true ? '.*?' : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  const globstar = opts => {\n    if (opts.noglobstar === true) return star;\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const create = str => {\n    switch (str) {\n      case '*':\n        return `${nodot}${ONE_CHAR}${star}`;\n\n      case '.*':\n        return `${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*.*':\n        return `${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*/*':\n        return `${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;\n\n      case '**':\n        return nodot + globstar(opts);\n\n      case '**/*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;\n\n      case '**/*.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '**/.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      default: {\n        const match = /^(.*?)\\.(\\w+)$/.exec(str);\n        if (!match) return;\n\n        const source = create(match[1]);\n        if (!source) return;\n\n        return source + DOT_LITERAL + match[2];\n      }\n    }\n  };\n\n  const output = utils.removePrefix(input, state);\n  let source = create(output);\n\n  if (source && opts.strictSlashes !== true) {\n    source += `${SLASH_LITERAL}?`;\n  }\n\n  return source;\n};\n\nmodule.exports = parse;\n","'use strict';\n\nconst path = require('path');\nconst scan = require('./scan');\nconst parse = require('./parse');\nconst utils = require('./utils');\nconst constants = require('./constants');\nconst isObject = val => val && typeof val === 'object' && !Array.isArray(val);\n\n/**\n * Creates a matcher function from one or more glob patterns. The\n * returned function takes a string to match as its first argument,\n * and returns true if the string is a match. The returned matcher\n * function also takes a boolean as the second argument that, when true,\n * returns an object with additional information.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch(glob[, options]);\n *\n * const isMatch = picomatch('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @name picomatch\n * @param {String|Array} `globs` One or more glob patterns.\n * @param {Object=} `options`\n * @return {Function=} Returns a matcher function.\n * @api public\n */\n\nconst picomatch = (glob, options, returnState = false) => {\n  if (Array.isArray(glob)) {\n    const fns = glob.map(input => picomatch(input, options, returnState));\n    const arrayMatcher = str => {\n      for (const isMatch of fns) {\n        const state = isMatch(str);\n        if (state) return state;\n      }\n      return false;\n    };\n    return arrayMatcher;\n  }\n\n  const isState = isObject(glob) && glob.tokens && glob.input;\n\n  if (glob === '' || (typeof glob !== 'string' && !isState)) {\n    throw new TypeError('Expected pattern to be a non-empty string');\n  }\n\n  const opts = options || {};\n  const posix = utils.isWindows(options);\n  const regex = isState\n    ? picomatch.compileRe(glob, options)\n    : picomatch.makeRe(glob, options, false, true);\n\n  const state = regex.state;\n  delete regex.state;\n\n  let isIgnored = () => false;\n  if (opts.ignore) {\n    const ignoreOpts = { ...options, ignore: null, onMatch: null, onResult: null };\n    isIgnored = picomatch(opts.ignore, ignoreOpts, returnState);\n  }\n\n  const matcher = (input, returnObject = false) => {\n    const { isMatch, match, output } = picomatch.test(input, regex, options, { glob, posix });\n    const result = { glob, state, regex, posix, input, output, match, isMatch };\n\n    if (typeof opts.onResult === 'function') {\n      opts.onResult(result);\n    }\n\n    if (isMatch === false) {\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (isIgnored(input)) {\n      if (typeof opts.onIgnore === 'function') {\n        opts.onIgnore(result);\n      }\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (typeof opts.onMatch === 'function') {\n      opts.onMatch(result);\n    }\n    return returnObject ? result : true;\n  };\n\n  if (returnState) {\n    matcher.state = state;\n  }\n\n  return matcher;\n};\n\n/**\n * Test `input` with the given `regex`. This is used by the main\n * `picomatch()` function to test the input string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.test(input, regex[, options]);\n *\n * console.log(picomatch.test('foo/bar', /^(?:([^/]*?)\\/([^/]*?))$/));\n * // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp} `regex`\n * @return {Object} Returns an object with matching info.\n * @api public\n */\n\npicomatch.test = (input, regex, options, { glob, posix } = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected input to be a string');\n  }\n\n  if (input === '') {\n    return { isMatch: false, output: '' };\n  }\n\n  const opts = options || {};\n  const format = opts.format || (posix ? utils.toPosixSlashes : null);\n  let match = input === glob;\n  let output = (match && format) ? format(input) : input;\n\n  if (match === false) {\n    output = format ? format(input) : input;\n    match = output === glob;\n  }\n\n  if (match === false || opts.capture === true) {\n    if (opts.matchBase === true || opts.basename === true) {\n      match = picomatch.matchBase(input, regex, options, posix);\n    } else {\n      match = regex.exec(output);\n    }\n  }\n\n  return { isMatch: Boolean(match), match, output };\n};\n\n/**\n * Match the basename of a filepath.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.matchBase(input, glob[, options]);\n * console.log(picomatch.matchBase('foo/bar.js', '*.js'); // true\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp|String} `glob` Glob pattern or regex created by [.makeRe](#makeRe).\n * @return {Boolean}\n * @api public\n */\n\npicomatch.matchBase = (input, glob, options, posix = utils.isWindows(options)) => {\n  const regex = glob instanceof RegExp ? glob : picomatch.makeRe(glob, options);\n  return regex.test(path.basename(input));\n};\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.isMatch(string, patterns[, options]);\n *\n * console.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(picomatch.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String|Array} str The string to test.\n * @param {String|Array} patterns One or more glob patterns to use for matching.\n * @param {Object} [options] See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\npicomatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const result = picomatch.parse(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as a regex source string.\n * @api public\n */\n\npicomatch.parse = (pattern, options) => {\n  if (Array.isArray(pattern)) return pattern.map(p => picomatch.parse(p, options));\n  return parse(pattern, { ...options, fastpaths: false });\n};\n\n/**\n * Scan a glob pattern to separate the pattern into segments.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.scan(input[, options]);\n *\n * const result = picomatch.scan('!./foo/*.js');\n * console.log(result);\n * { prefix: '!./',\n *   input: '!./foo/*.js',\n *   start: 3,\n *   base: 'foo',\n *   glob: '*.js',\n *   isBrace: false,\n *   isBracket: false,\n *   isGlob: true,\n *   isExtglob: false,\n *   isGlobstar: false,\n *   negated: true }\n * ```\n * @param {String} `input` Glob pattern to scan.\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\npicomatch.scan = (input, options) => scan(input, options);\n\n/**\n * Compile a regular expression from the `state` object returned by the\n * [parse()](#parse) method.\n *\n * @param {Object} `state`\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Intended for implementors, this argument allows you to return the raw output from the parser.\n * @param {Boolean} `returnState` Adds the state to a `state` property on the returned regex. Useful for implementors and debugging.\n * @return {RegExp}\n * @api public\n */\n\npicomatch.compileRe = (state, options, returnOutput = false, returnState = false) => {\n  if (returnOutput === true) {\n    return state.output;\n  }\n\n  const opts = options || {};\n  const prepend = opts.contains ? '' : '^';\n  const append = opts.contains ? '' : '$';\n\n  let source = `${prepend}(?:${state.output})${append}`;\n  if (state && state.negated === true) {\n    source = `^(?!${source}).*$`;\n  }\n\n  const regex = picomatch.toRegex(source, options);\n  if (returnState === true) {\n    regex.state = state;\n  }\n\n  return regex;\n};\n\n/**\n * Create a regular expression from a parsed glob pattern.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const state = picomatch.parse('*.js');\n * // picomatch.compileRe(state[, options]);\n *\n * console.log(picomatch.compileRe(state));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `state` The object returned from the `.parse` method.\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result.\n * @param {Boolean} `returnState` Implementors may use this argument to return the state from the parsed glob with the returned regular expression.\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\npicomatch.makeRe = (input, options = {}, returnOutput = false, returnState = false) => {\n  if (!input || typeof input !== 'string') {\n    throw new TypeError('Expected a non-empty string');\n  }\n\n  let parsed = { negated: false, fastpaths: true };\n\n  if (options.fastpaths !== false && (input[0] === '.' || input[0] === '*')) {\n    parsed.output = parse.fastpaths(input, options);\n  }\n\n  if (!parsed.output) {\n    parsed = parse(input, options);\n  }\n\n  return picomatch.compileRe(parsed, options, returnOutput, returnState);\n};\n\n/**\n * Create a regular expression from the given regex source string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.toRegex(source[, options]);\n *\n * const { output } = picomatch.parse('*.js');\n * console.log(picomatch.toRegex(output));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `source` Regular expression source string.\n * @param {Object} `options`\n * @return {RegExp}\n * @api public\n */\n\npicomatch.toRegex = (source, options) => {\n  try {\n    const opts = options || {};\n    return new RegExp(source, opts.flags || (opts.nocase ? 'i' : ''));\n  } catch (err) {\n    if (options && options.debug === true) throw err;\n    return /$^/;\n  }\n};\n\n/**\n * Picomatch constants.\n * @return {Object}\n */\n\npicomatch.constants = constants;\n\n/**\n * Expose \"picomatch\"\n */\n\nmodule.exports = picomatch;\n","'use strict';\n\nmodule.exports = require('./lib/picomatch');\n","import { extname, win32, posix, isAbsolute, resolve } from 'path';\nimport { walk } from 'estree-walker';\nimport pm from 'picomatch';\n\nconst addExtension = function addExtension(filename, ext = '.js') {\n    let result = `${filename}`;\n    if (!extname(filename))\n        result += ext;\n    return result;\n};\n\nconst extractors = {\n    ArrayPattern(names, param) {\n        for (const element of param.elements) {\n            if (element)\n                extractors[element.type](names, element);\n        }\n    },\n    AssignmentPattern(names, param) {\n        extractors[param.left.type](names, param.left);\n    },\n    Identifier(names, param) {\n        names.push(param.name);\n    },\n    MemberExpression() { },\n    ObjectPattern(names, param) {\n        for (const prop of param.properties) {\n            // @ts-ignore Typescript reports that this is not a valid type\n            if (prop.type === 'RestElement') {\n                extractors.RestElement(names, prop);\n            }\n            else {\n                extractors[prop.value.type](names, prop.value);\n            }\n        }\n    },\n    RestElement(names, param) {\n        extractors[param.argument.type](names, param.argument);\n    }\n};\nconst extractAssignedNames = function extractAssignedNames(param) {\n    const names = [];\n    extractors[param.type](names, param);\n    return names;\n};\n\nconst blockDeclarations = {\n    const: true,\n    let: true\n};\nclass Scope {\n    constructor(options = {}) {\n        this.parent = options.parent;\n        this.isBlockScope = !!options.block;\n        this.declarations = Object.create(null);\n        if (options.params) {\n            options.params.forEach((param) => {\n                extractAssignedNames(param).forEach((name) => {\n                    this.declarations[name] = true;\n                });\n            });\n        }\n    }\n    addDeclaration(node, isBlockDeclaration, isVar) {\n        if (!isBlockDeclaration && this.isBlockScope) {\n            // it's a `var` or function node, and this\n            // is a block scope, so we need to go up\n            this.parent.addDeclaration(node, isBlockDeclaration, isVar);\n        }\n        else if (node.id) {\n            extractAssignedNames(node.id).forEach((name) => {\n                this.declarations[name] = true;\n            });\n        }\n    }\n    contains(name) {\n        return this.declarations[name] || (this.parent ? this.parent.contains(name) : false);\n    }\n}\nconst attachScopes = function attachScopes(ast, propertyName = 'scope') {\n    let scope = new Scope();\n    walk(ast, {\n        enter(n, parent) {\n            const node = n;\n            // function foo () {...}\n            // class Foo {...}\n            if (/(?:Function|Class)Declaration/.test(node.type)) {\n                scope.addDeclaration(node, false, false);\n            }\n            // var foo = 1\n            if (node.type === 'VariableDeclaration') {\n                const { kind } = node;\n                const isBlockDeclaration = blockDeclarations[kind];\n                node.declarations.forEach((declaration) => {\n                    scope.addDeclaration(declaration, isBlockDeclaration, true);\n                });\n            }\n            let newScope;\n            // create new function scope\n            if (/Function/.test(node.type)) {\n                const func = node;\n                newScope = new Scope({\n                    parent: scope,\n                    block: false,\n                    params: func.params\n                });\n                // named function expressions - the name is considered\n                // part of the function's scope\n                if (func.type === 'FunctionExpression' && func.id) {\n                    newScope.addDeclaration(func, false, false);\n                }\n            }\n            // create new for scope\n            if (/For(?:In|Of)?Statement/.test(node.type)) {\n                newScope = new Scope({\n                    parent: scope,\n                    block: true\n                });\n            }\n            // create new block scope\n            if (node.type === 'BlockStatement' && !/Function/.test(parent.type)) {\n                newScope = new Scope({\n                    parent: scope,\n                    block: true\n                });\n            }\n            // catch clause has its own block scope\n            if (node.type === 'CatchClause') {\n                newScope = new Scope({\n                    parent: scope,\n                    params: node.param ? [node.param] : [],\n                    block: true\n                });\n            }\n            if (newScope) {\n                Object.defineProperty(node, propertyName, {\n                    value: newScope,\n                    configurable: true\n                });\n                scope = newScope;\n            }\n        },\n        leave(n) {\n            const node = n;\n            if (node[propertyName])\n                scope = scope.parent;\n        }\n    });\n    return scope;\n};\n\n// Helper since Typescript can't detect readonly arrays with Array.isArray\nfunction isArray(arg) {\n    return Array.isArray(arg);\n}\nfunction ensureArray(thing) {\n    if (isArray(thing))\n        return thing;\n    if (thing == null)\n        return [];\n    return [thing];\n}\n\nconst normalizePath = function normalizePath(filename) {\n    return filename.split(win32.sep).join(posix.sep);\n};\n\nfunction getMatcherString(id, resolutionBase) {\n    if (resolutionBase === false || isAbsolute(id) || id.startsWith('**')) {\n        return normalizePath(id);\n    }\n    // resolve('') is valid and will default to process.cwd()\n    const basePath = normalizePath(resolve(resolutionBase || ''))\n        // escape all possible (posix + win) path characters that might interfere with regex\n        .replace(/[-^$*+?.()|[\\]{}]/g, '\\\\$&');\n    // Note that we use posix.join because:\n    // 1. the basePath has been normalized to use /\n    // 2. the incoming glob (id) matcher, also uses /\n    // otherwise Node will force backslash (\\) on windows\n    return posix.join(basePath, normalizePath(id));\n}\nconst createFilter = function createFilter(include, exclude, options) {\n    const resolutionBase = options && options.resolve;\n    const getMatcher = (id) => id instanceof RegExp\n        ? id\n        : {\n            test: (what) => {\n                // this refactor is a tad overly verbose but makes for easy debugging\n                const pattern = getMatcherString(id, resolutionBase);\n                const fn = pm(pattern, { dot: true });\n                const result = fn(what);\n                return result;\n            }\n        };\n    const includeMatchers = ensureArray(include).map(getMatcher);\n    const excludeMatchers = ensureArray(exclude).map(getMatcher);\n    return function result(id) {\n        if (typeof id !== 'string')\n            return false;\n        if (/\\0/.test(id))\n            return false;\n        const pathId = normalizePath(id);\n        for (let i = 0; i < excludeMatchers.length; ++i) {\n            const matcher = excludeMatchers[i];\n            if (matcher.test(pathId))\n                return false;\n        }\n        for (let i = 0; i < includeMatchers.length; ++i) {\n            const matcher = includeMatchers[i];\n            if (matcher.test(pathId))\n                return true;\n        }\n        return !includeMatchers.length;\n    };\n};\n\nconst reservedWords = 'break case class catch const continue debugger default delete do else export extends finally for function if import in instanceof let new return super switch this throw try typeof var void while with yield enum await implements package protected static interface private public';\nconst builtins = 'arguments Infinity NaN undefined null true false eval uneval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent encodeURI encodeURIComponent escape unescape Object Function Boolean Symbol Error EvalError InternalError RangeError ReferenceError SyntaxError TypeError URIError Number Math Date String RegExp Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array Map Set WeakMap WeakSet SIMD ArrayBuffer DataView JSON Promise Generator GeneratorFunction Reflect Proxy Intl';\nconst forbiddenIdentifiers = new Set(`${reservedWords} ${builtins}`.split(' '));\nforbiddenIdentifiers.add('');\nconst makeLegalIdentifier = function makeLegalIdentifier(str) {\n    let identifier = str\n        .replace(/-(\\w)/g, (_, letter) => letter.toUpperCase())\n        .replace(/[^$_a-zA-Z0-9]/g, '_');\n    if (/\\d/.test(identifier[0]) || forbiddenIdentifiers.has(identifier)) {\n        identifier = `_${identifier}`;\n    }\n    return identifier || '_';\n};\n\nfunction stringify(obj) {\n    return (JSON.stringify(obj) || 'undefined').replace(/[\\u2028\\u2029]/g, (char) => `\\\\u${`000${char.charCodeAt(0).toString(16)}`.slice(-4)}`);\n}\nfunction serializeArray(arr, indent, baseIndent) {\n    let output = '[';\n    const separator = indent ? `\\n${baseIndent}${indent}` : '';\n    for (let i = 0; i < arr.length; i++) {\n        const key = arr[i];\n        output += `${i > 0 ? ',' : ''}${separator}${serialize(key, indent, baseIndent + indent)}`;\n    }\n    return `${output}${indent ? `\\n${baseIndent}` : ''}]`;\n}\nfunction serializeObject(obj, indent, baseIndent) {\n    let output = '{';\n    const separator = indent ? `\\n${baseIndent}${indent}` : '';\n    const entries = Object.entries(obj);\n    for (let i = 0; i < entries.length; i++) {\n        const [key, value] = entries[i];\n        const stringKey = makeLegalIdentifier(key) === key ? key : stringify(key);\n        output += `${i > 0 ? ',' : ''}${separator}${stringKey}:${indent ? ' ' : ''}${serialize(value, indent, baseIndent + indent)}`;\n    }\n    return `${output}${indent ? `\\n${baseIndent}` : ''}}`;\n}\nfunction serialize(obj, indent, baseIndent) {\n    if (typeof obj === 'object' && obj !== null) {\n        if (Array.isArray(obj))\n            return serializeArray(obj, indent, baseIndent);\n        if (obj instanceof Date)\n            return `new Date(${obj.getTime()})`;\n        if (obj instanceof RegExp)\n            return obj.toString();\n        return serializeObject(obj, indent, baseIndent);\n    }\n    if (typeof obj === 'number') {\n        if (obj === Infinity)\n            return 'Infinity';\n        if (obj === -Infinity)\n            return '-Infinity';\n        if (obj === 0)\n            return 1 / obj === Infinity ? '0' : '-0';\n        if (obj !== obj)\n            return 'NaN'; // eslint-disable-line no-self-compare\n    }\n    if (typeof obj === 'symbol') {\n        const key = Symbol.keyFor(obj);\n        // eslint-disable-next-line no-undefined\n        if (key !== undefined)\n            return `Symbol.for(${stringify(key)})`;\n    }\n    if (typeof obj === 'bigint')\n        return `${obj}n`;\n    return stringify(obj);\n}\n// isWellFormed exists from Node.js 20\nconst hasStringIsWellFormed = 'isWellFormed' in String.prototype;\nfunction isWellFormedString(input) {\n    // @ts-expect-error String::isWellFormed exists from ES2024. tsconfig lib is set to ES6\n    if (hasStringIsWellFormed)\n        return input.isWellFormed();\n    // https://github.com/tc39/proposal-is-usv-string/blob/main/README.md#algorithm\n    return !/\\p{Surrogate}/u.test(input);\n}\nconst dataToEsm = function dataToEsm(data, options = {}) {\n    var _a, _b;\n    const t = options.compact ? '' : 'indent' in options ? options.indent : '\\t';\n    const _ = options.compact ? '' : ' ';\n    const n = options.compact ? '' : '\\n';\n    const declarationType = options.preferConst ? 'const' : 'var';\n    if (options.namedExports === false ||\n        typeof data !== 'object' ||\n        Array.isArray(data) ||\n        data instanceof Date ||\n        data instanceof RegExp ||\n        data === null) {\n        const code = serialize(data, options.compact ? null : t, '');\n        const magic = _ || (/^[{[\\-\\/]/.test(code) ? '' : ' '); // eslint-disable-line no-useless-escape\n        return `export default${magic}${code};`;\n    }\n    let maxUnderbarPrefixLength = 0;\n    for (const key of Object.keys(data)) {\n        const underbarPrefixLength = (_b = (_a = /^(_+)/.exec(key)) === null || _a === void 0 ? void 0 : _a[0].length) !== null && _b !== void 0 ? _b : 0;\n        if (underbarPrefixLength > maxUnderbarPrefixLength) {\n            maxUnderbarPrefixLength = underbarPrefixLength;\n        }\n    }\n    const arbitraryNamePrefix = `${'_'.repeat(maxUnderbarPrefixLength + 1)}arbitrary`;\n    let namedExportCode = '';\n    const defaultExportRows = [];\n    const arbitraryNameExportRows = [];\n    for (const [key, value] of Object.entries(data)) {\n        if (key === makeLegalIdentifier(key)) {\n            if (options.objectShorthand)\n                defaultExportRows.push(key);\n            else\n                defaultExportRows.push(`${key}:${_}${key}`);\n            namedExportCode += `export ${declarationType} ${key}${_}=${_}${serialize(value, options.compact ? null : t, '')};${n}`;\n        }\n        else {\n            defaultExportRows.push(`${stringify(key)}:${_}${serialize(value, options.compact ? null : t, '')}`);\n            if (options.includeArbitraryNames && isWellFormedString(key)) {\n                const variableName = `${arbitraryNamePrefix}${arbitraryNameExportRows.length}`;\n                namedExportCode += `${declarationType} ${variableName}${_}=${_}${serialize(value, options.compact ? null : t, '')};${n}`;\n                arbitraryNameExportRows.push(`${variableName} as ${JSON.stringify(key)}`);\n            }\n        }\n    }\n    const arbitraryExportCode = arbitraryNameExportRows.length > 0\n        ? `export${_}{${n}${t}${arbitraryNameExportRows.join(`,${n}${t}`)}${n}};${n}`\n        : '';\n    const defaultExportCode = `export default${_}{${n}${t}${defaultExportRows.join(`,${n}${t}`)}${n}};${n}`;\n    return `${namedExportCode}${arbitraryExportCode}${defaultExportCode}`;\n};\n\n// TODO: remove this in next major\nvar index = {\n    addExtension,\n    attachScopes,\n    createFilter,\n    dataToEsm,\n    extractAssignedNames,\n    makeLegalIdentifier,\n    normalizePath\n};\n\nexport { addExtension, attachScopes, createFilter, dataToEsm, index as default, extractAssignedNames, makeLegalIdentifier, normalizePath };\n//# sourceMappingURL=index.js.map\n","import { Options, HandleMobileOptions, TransformPixelsOptions } from './types'\n\nexport const optionDefaults: Options = {\n  appEntry: undefined,\n  handleMobile: true,\n  transformPixels: true\n}\n\nexport const handleMobileDefaults: HandleMobileOptions = {\n  ignoreSelectors: [],\n  centralizeText: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'p'],\n  breakpoint: '480px'\n}\n\nexport const transformPixelsDefault: TransformPixelsOptions = {\n  ignoreAttributes: [],\n  ignoreSelectors: []\n}","export const htmlTagBaseFontSize = 16\nexport const ignoreResponsiveAppClass = 'ignore-responsive-app'\nexport const indexHtmlFile = '/index.html'\nexport const appEntryPoints = [indexHtmlFile, '/app.js', '/main.js', 'src/index.js']","import MagicString from 'magic-string'\nimport { Options, TransformPixelsOptions, HandleMobileOptions } from './types'\nimport { htmlTagBaseFontSize, ignoreResponsiveAppClass } from './constants'\nimport { handleMobileDefaults, transformPixelsDefault } from './options'\n\nconst pxToRemRegExp = /(\\d+)px/g\nconst cssSelectorRegExp = /([.#\\w\\-\\s,:]+)\\s*\\{([^}]+?)\\}/gs\nconst propRegex = /([\\w-]+)\\s*:\\s*([^}]+)/g\n\nfunction getRemValue(value: number) {\n  return (value / htmlTagBaseFontSize).toFixed(4).replace(/[.,]0+$/, \"\")\n}\n\nfunction getPropertyRemValue(value: string) {\n  return value.replace(/[0-9]+px/g, (match: string) => {\n    return getRemValue(Number(match.replace('px', ''))) + 'rem'\n  })\n}\n\nfunction transformPixels(code: string, options: TransformPixelsOptions) {\n  const cssMap = new Map()\n  let match\n\n  while ((match = cssSelectorRegExp.exec(code)) !== null) {\n    const selector = match[1].trim()\n    const properties = match[2].trim()\n\n    if (options.ignoreSelectors.some(i => selector.includes(i))) {\n      continue\n    }\n\n    const pxProperties = []\n    let propMatch\n\n    while ((propMatch = propRegex.exec(properties)) !== null) {\n      const key = propMatch[1].trim()\n      const value = propMatch[2].trim()\n\n      if (value.includes('px') && !options.ignoreAttributes.includes(key)) {\n        pxProperties.push({ key, value })\n      }\n    }\n\n    if (pxProperties.length > 0) {\n      cssMap.set(selector, pxProperties)\n    }\n  }\n\n  let transformationDefinitions = ''\n\n  if (cssMap.size > 0) {\n    cssMap.forEach((properties, key) => {\n      transformationDefinitions += `${key}:not(.${ignoreResponsiveAppClass}){`\n      properties.forEach((prop: { key: string, value: string }, index: number) => {\n        const isLast = index === properties.length - 1\n        transformationDefinitions += `${prop.key}:${getPropertyRemValue(prop.value)}${isLast ? '' : ''}`\n      })\n      transformationDefinitions += '}'\n    })\n  }\n\n  return transformationDefinitions\n}\n\nfunction handleMobile(code: string, options: HandleMobileOptions) {\n  const selectors = new Set()\n  let match\n\n  while ((match = cssSelectorRegExp.exec(code)) !== null) {\n    const selector = match[1].trim()\n    const properties = match[2].trim()\n    if (options.ignoreSelectors.some(i => selector.includes(i))) {\n      continue\n    }\n\n    let hasDisplayFlex = false\n    let hasFlexDirectionColumn = false\n\n    let propMatch\n\n    while ((propMatch = propRegex.exec(properties)) !== null) {\n      const key = propMatch[1].trim()\n      const value = propMatch[2].trim()\n\n      if (key === 'display' && value === 'flex') {\n        hasDisplayFlex = true\n      }\n      if (key === 'flex-direction' && value === 'column') {\n        hasFlexDirectionColumn = true\n      }\n    }\n    if (hasDisplayFlex && !hasFlexDirectionColumn) {\n      selectors.add(selector)\n    }\n  }\n\n  let transformationDefinitions = ''\n\n  if (selectors.size > 0) {\n    transformationDefinitions = `@media only screen and (max-width: ${options.breakpoint}) and (orientation: portrait){`\n    selectors.forEach((key) => {\n      transformationDefinitions += `${key}:not(.${ignoreResponsiveAppClass}){flex-direction: column; margin-left: 0; margin-right: 0}`\n    })\n    transformationDefinitions += '}'\n  }\n\n  return transformationDefinitions\n}\n\nfunction findInsertionIndex(str: string) {\n  const openingQuoteStatements = [\n    'const __vite__css = \"',\n    'export default \"'\n  ]\n  let closingQuoteIndex = -1\n  let searchString\n  let startIndex\n\n  do {\n    searchString = openingQuoteStatements.pop()\n    startIndex = searchString ? str.indexOf(searchString) : -1\n    if (searchString && startIndex !== -1) {\n      const openQuoteIndex = startIndex + searchString.length - 1\n      closingQuoteIndex = str.indexOf('\"', openQuoteIndex + 1)\n    }\n  } while (searchString && startIndex === -1)\n\n  return closingQuoteIndex\n}\n\nexport default (options: Options, code: string, id: string) => {\n  const transformPixelsParams = {\n    ...transformPixelsDefault,\n    ...(typeof options.transformPixels === 'object' ? options.transformPixels : {})\n  }\n  const handleMobileParams = {\n    ...handleMobileDefaults,\n    ...(typeof options.handleMobile === 'object' ? options.handleMobile : {})\n  }\n\n  let transformedCode = ''\n  transformedCode += options.transformPixels ? transformPixels(code, transformPixelsParams) : ''\n  transformedCode += options.handleMobile ? handleMobile(code, handleMobileParams) : ''\n\n  if (transformedCode) {\n    const magicString = new MagicString(code)\n    const index = findInsertionIndex(code)\n    if (index !== -1) {\n      magicString.prependLeft(index, transformedCode)\n    } else if (code.charAt(code.length - 1) === '\"') {\n      magicString.replace(/\"$/, `${transformedCode}\"`)\n    } else {\n      magicString.append(transformedCode)\n    }\n\n    return {\n      code: magicString.toString(),\n      map: magicString.generateMap({\n        source: id,\n        file: id,\n        includeContent: true\n      })\n    }\n  }\n\n  return null\n}","export default `\n:root {\n  --v-rem: 32;\n}\n@media (orientation: landscape) and (max-width: 2480px), (orientation: landscape) and (max-height: 1395px) {\n  :root {\n    --v-rem: 31;\n }\n}\n@media (orientation: landscape) and (max-width: 2400px), (orientation: landscape) and (max-height: 1350px) {\n  :root {\n    --v-rem: 30;\n }\n}\n@media (orientation: landscape) and (max-width: 2320px), (orientation: landscape) and (max-height: 1305px) {\n  :root {\n    --v-rem: 29;\n }\n}\n@media (orientation: landscape) and (max-width: 2240px), (orientation: landscape) and (max-height: 1260px) {\n  :root {\n    --v-rem: 28;\n }\n}\n@media (orientation: landscape) and (max-width: 2160px), (orientation: landscape) and (max-height: 1215px) {\n  :root {\n    --v-rem: 27;\n }\n}\n@media (orientation: landscape) and (max-width: 2080px), (orientation: landscape) and (max-height: 1170px) {\n  :root {\n    --v-rem: 26;\n }\n}\n@media (orientation: landscape) and (max-width: 2000px), (orientation: landscape) and (max-height: 1125px) {\n  :root {\n    --v-rem: 25;\n }\n}\n@media (orientation: landscape) and (max-width: 1920px), (orientation: landscape) and (max-height: 1080px) {\n  :root {\n    --v-rem: 24;\n }\n}\n@media (orientation: landscape) and (max-width: 1840px), (orientation: landscape) and (max-height: 1035px) {\n  :root {\n    --v-rem: 23;\n }\n}\n@media (orientation: landscape) and (max-width: 1760px), (orientation: landscape) and (max-height: 990px) {\n  :root {\n    --v-rem: 22;\n }\n}\n@media (orientation: landscape) and (max-width: 1680px), (orientation: landscape) and (max-height: 945px) {\n  :root {\n    --v-rem: 21;\n }\n}\n@media (orientation: landscape) and (max-width: 1600px), (orientation: landscape) and (max-height: 900px) {\n  :root {\n    --v-rem: 20;\n }\n}\n@media (orientation: landscape) and (max-width: 1520px), (orientation: landscape) and (max-height: 855px) {\n  :root {\n    --v-rem: 19;\n }\n}\n@media (orientation: landscape) and (max-width: 1440px), (orientation: landscape) and (max-height: 810px) {\n  :root {\n    --v-rem: 18;\n }\n}\n@media (orientation: landscape) and (max-width: 1360px), (orientation: landscape) and (max-height: 765px) {\n  :root {\n    --v-rem: 17;\n }\n}\n@media (orientation: landscape) and (max-width: 1280px), (orientation: landscape) and (max-height: 720px) {\n  :root {\n    --v-rem: 16;\n }\n}\n@media (orientation: landscape) and (max-width: 1200px), (orientation: landscape) and (max-height: 675px) {\n  :root {\n    --v-rem: 15;\n }\n}\n@media (orientation: landscape) and (max-width: 1120px), (orientation: landscape) and (max-height: 630px) {\n  :root {\n    --v-rem: 14;\n }\n}\n@media (orientation: landscape) and (max-width: 1040px), (orientation: landscape) and (max-height: 585px) {\n  :root {\n    --v-rem: 13;\n }\n}\n@media (orientation: landscape) and (max-width: 960px), (orientation: landscape) and (max-height: 540px) {\n  :root {\n    --v-rem: 12;\n }\n}\n@media (orientation: landscape) and (max-width: 880px), (orientation: landscape) and (max-height: 495px) {\n  :root {\n    --v-rem: 11;\n }\n}\n@media (orientation: landscape) and (max-width: 800px), (orientation: landscape) and (max-height: 450px) {\n  :root {\n    --v-rem: 10;\n }\n}\n@media (orientation: landscape) and (max-width: 720px), (orientation: landscape) and (max-height: 405px) {\n  :root {\n    --v-rem: 9;\n }\n}\n@media (orientation: landscape) and (max-width: 640px), (orientation: landscape) and (max-height: 360px) {\n  :root {\n    --v-rem: 8;\n }\n}\n@media (orientation: landscape) and (max-width: 560px), (orientation: landscape) and (max-height: 315px) {\n  :root {\n    --v-rem: 7;\n }\n}\n@media (orientation: landscape) and (max-width: 480px), (orientation: landscape) and (max-height: 270px) {\n  :root {\n    --v-rem: 6;\n }\n}\n@media (orientation: landscape) and (max-width: 400px), (orientation: landscape) and (max-height: 225px) {\n  :root {\n    --v-rem: 5;\n }\n}\n@media (orientation: landscape) and (max-width: 320px), (orientation: landscape) and (max-height: 180px) {\n  :root {\n    --v-rem: 4;\n }\n}\n@media (orientation: landscape) and (max-width: 240px), (orientation: landscape) and (max-height: 135px) {\n  :root {\n    --v-rem: 3;\n }\n}\n@media (orientation: landscape) and (max-width: 160px), (orientation: landscape) and (max-height: 90px) {\n  :root {\n    --v-rem: 2;\n }\n}\n@media (orientation: landscape) and (max-width: 80px), (orientation: landscape) and (max-height: 45px) {\n  :root {\n    --v-rem: 1;\n }\n}\n@media (orientation: portrait) and (max-width: 1395px), (orientation: portrait) and (max-height: 2480px) {\n  :root {\n    --v-rem: 31;\n }\n}\n@media (orientation: portrait) and (max-width: 1350px), (orientation: portrait) and (max-height: 2400px) {\n  :root {\n    --v-rem: 30;\n }\n}\n@media (orientation: portrait) and (max-width: 1305px), (orientation: portrait) and (max-height: 2320px) {\n  :root {\n    --v-rem: 29;\n }\n}\n@media (orientation: portrait) and (max-width: 1260px), (orientation: portrait) and (max-height: 2240px) {\n  :root {\n    --v-rem: 28;\n }\n}\n@media (orientation: portrait) and (max-width: 1215px), (orientation: portrait) and (max-height: 2160px) {\n  :root {\n    --v-rem: 27;\n }\n}\n@media (orientation: portrait) and (max-width: 1170px), (orientation: portrait) and (max-height: 2080px) {\n  :root {\n    --v-rem: 26;\n }\n}\n@media (orientation: portrait) and (max-width: 1125px), (orientation: portrait) and (max-height: 2000px) {\n  :root {\n    --v-rem: 25;\n }\n}\n@media (orientation: portrait) and (max-width: 1080px), (orientation: portrait) and (max-height: 1920px) {\n  :root {\n    --v-rem: 24;\n }\n}\n@media (orientation: portrait) and (max-width: 1035px), (orientation: portrait) and (max-height: 1840px) {\n  :root {\n    --v-rem: 23;\n }\n}\n@media (orientation: portrait) and (max-width: 990px), (orientation: portrait) and (max-height: 1760px) {\n  :root {\n    --v-rem: 22;\n }\n}\n@media (orientation: portrait) and (max-width: 945px), (orientation: portrait) and (max-height: 1680px) {\n  :root {\n    --v-rem: 21;\n }\n}\n@media (orientation: portrait) and (max-width: 900px), (orientation: portrait) and (max-height: 1600px) {\n  :root {\n    --v-rem: 20;\n }\n}\n@media (orientation: portrait) and (max-width: 855px), (orientation: portrait) and (max-height: 1520px) {\n  :root {\n    --v-rem: 19;\n }\n}\n@media (orientation: portrait) and (max-width: 810px), (orientation: portrait) and (max-height: 1440px) {\n  :root {\n    --v-rem: 18;\n }\n}\n@media (orientation: portrait) and (max-width: 765px), (orientation: portrait) and (max-height: 1360px) {\n  :root {\n    --v-rem: 17;\n }\n}\n@media (orientation: portrait) and (max-width: 720px), (orientation: portrait) and (max-height: 1280px) {\n  :root {\n    --v-rem: 16;\n }\n}\n@media (orientation: portrait) and (max-width: 675px), (orientation: portrait) and (max-height: 1200px) {\n  :root {\n    --v-rem: 15;\n }\n}\n@media (orientation: portrait) and (max-width: 630px), (orientation: portrait) and (max-height: 1120px) {\n  :root {\n    --v-rem: 14;\n }\n}\n@media (orientation: portrait) and (max-width: 585px), (orientation: portrait) and (max-height: 1040px) {\n  :root {\n    --v-rem: 13;\n }\n}\n@media (orientation: portrait) and (max-width: 540px), (orientation: portrait) and (max-height: 960px) {\n  :root {\n    --v-rem: 12;\n }\n}\n@media (orientation: portrait) and (max-width: 495px), (orientation: portrait) and (max-height: 880px) {\n  :root {\n    --v-rem: 11;\n }\n}\n@media (orientation: portrait) and (max-width: 450px), (orientation: portrait) and (max-height: 800px) {\n  :root {\n    --v-rem: 10;\n }\n}\n@media (orientation: portrait) and (max-width: 405px), (orientation: portrait) and (max-height: 720px) {\n  :root {\n    --v-rem: 9;\n }\n}\n@media (orientation: portrait) and (max-width: 360px), (orientation: portrait) and (max-height: 640px) {\n  :root {\n    --v-rem: 8;\n }\n}\n@media (orientation: portrait) and (max-width: 315px), (orientation: portrait) and (max-height: 560px) {\n  :root {\n    --v-rem: 7;\n }\n}\n@media (orientation: portrait) and (max-width: 270px), (orientation: portrait) and (max-height: 480px) {\n  :root {\n    --v-rem: 6;\n }\n}\n@media (orientation: portrait) and (max-width: 225px), (orientation: portrait) and (max-height: 400px) {\n  :root {\n    --v-rem: 5;\n }\n}\n@media (orientation: portrait) and (max-width: 180px), (orientation: portrait) and (max-height: 320px) {\n  :root {\n    --v-rem: 4;\n }\n}\n@media (orientation: portrait) and (max-width: 135px), (orientation: portrait) and (max-height: 240px) {\n  :root {\n    --v-rem: 3;\n }\n}\n@media (orientation: portrait) and (max-width: 90px), (orientation: portrait) and (max-height: 160px) {\n  :root {\n    --v-rem: 2;\n }\n}\n@media (orientation: portrait) and (max-width: 45px), (orientation: portrait) and (max-height: 80px) {\n  :root {\n    --v-rem: 1;\n }\n}\n`","import queries from './queries'\n\nexport default () => {\n  return `\n    if (typeof window !== 'undefined') {\n      const baseFontSize = 16\n    \n      const updateHtmlFontSize = function() {\n        const htmlElement = document.querySelector('html');\n        htmlElement.style.removeProperty('font-size');\n        const browserFontSize = window.getComputedStyle(htmlElement).getPropertyValue('font-size');\n\n        const browserDifference = Number(browserFontSize.replace('px', '')) - baseFontSize;\n\n        const vRem = window.getComputedStyle(document.documentElement).getPropertyValue('--v-rem');\n        const fontSize = Number(vRem) + Number(browserDifference)\n        htmlElement.style.setProperty('font-size', fontSize + 'px')\n      }\n\n      const addVirtualRemQueries = function() {\n        const style = document.createElement('style')\n        style.setAttribute('type', 'text/css')\n        style.setAttribute('data-magic-responsive', 'true')\n        style.textContent = \\\"${queries.replace(/\\n/g, '')}\\\"\n        document.head.appendChild(style)\n      }\n\n      const initResponsive = function() {\n        window.addEventListener('resize', updateHtmlFontSize)\n        addVirtualRemQueries()\n        updateHtmlFontSize()\n      }\n\n      if (window.document.readyState !== 'loading') {\n        initResponsive();\n      } else {\n        window.document.addEventListener('DOMContentLoaded', function() {\n          initResponsive();\n        });\n      }\n    }`\n}","import MagicString from 'magic-string'\nimport { indexHtmlFile } from './constants'\nimport getResponsiveScript from './script'\n\nexport default (code: string, id: string) => {\n  const magicString = new MagicString(code)\n  const isHtmlFile = id.includes(indexHtmlFile)\n  if (isHtmlFile) {\n    const index = code.indexOf('</body>')\n    magicString.prependLeft(index, `<script>${getResponsiveScript()}</script>`)\n  } else {\n    magicString.append(`\\n\\n(function() {\\n${getResponsiveScript()}\\n}())`)\n  }\n\n  return {\n    code: magicString.toString(),\n    map: magicString.generateMap({\n      source: id,\n      file: id,\n      includeContent: true\n    })\n  }\n}","import { OutputOptions, OutputBundle, Plugin } from 'rollup'\nimport { createFilter } from '@rollup/pluginutils'\nimport fs from 'fs'\nimport path from 'path'\n\nimport { Options } from './types'\nimport { optionDefaults } from './options'\nimport { indexHtmlFile, appEntryPoints } from './constants'\nimport handleCss from './cssHandler'\nimport handleJs from './jsHandler'\n\nlet hasAddedScript = false\n\nexport default function(data?: Options): Plugin {\n  const options: Options = {\n    ...optionDefaults,\n    ...(data || {})\n  }\n\n  return {\n    name: 'responsive-app-rollup-plugin',\n\n    transform: {\n      order: 'post',\n      handler(code: string, id: string) {\n        if ((options.handleMobile || options.transformPixels) && id.includes('.css')) {\n          return handleCss(options, code, id)\n        }\n\n        const isOptionEntryPoint = options.appEntry && id.includes(options.appEntry)\n        const isDefaultEntryPoint = !options.appEntry && appEntryPoints.some(i => id.includes(i)) && !id.includes('/server')\n\n        if (!hasAddedScript && (isOptionEntryPoint || isDefaultEntryPoint)) {\n          hasAddedScript = true\n          return handleJs(code, id)\n        }\n\n        return null\n      },\n    },\n\n    async generateBundle(bundleOptions: OutputOptions, bundle: OutputBundle) {\n      const cssFilter = createFilter('**/*.css')\n\n      for (const fileName of Object.keys(bundle)) {\n        if (cssFilter(fileName)) {\n          const cssAsset = bundle[fileName]\n          if (cssAsset && cssAsset.type === 'asset') {\n            const cssBuffer = cssAsset.source;\n            const cssContent = typeof cssBuffer === 'string' ? cssBuffer : (Buffer.from(cssBuffer)).toString()\n            const transformedCSS = handleCss(options, cssContent, fileName)\n            if (transformedCSS) {\n              cssAsset.source = transformedCSS.code\n            }\n          }\n        }\n      }\n    },\n\n    watchChange(id: string) {\n      if (id.endsWith('.css')) {\n        this.addWatchFile(id)\n      }\n    }\n  }\n}"],"names":["require$$1","require$$0","require$$2","require$$3","require$$4"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}